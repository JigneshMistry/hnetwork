<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Comman_model extends CI_Model
{
	
	public $tables = array();
	public function __construct()
	{
		parent::__construct();
		$this->load->database();
		$this->load->helper('cookie');
		$this->load->helper('date');
		
		// initialize db tables data
		$this->tables  = $this->config->item('tables', 'posts');
		
	}
	
	public function insertpost($userId,$post_title,$post_desc,$post_attach,$post_status,$post_date,$post_type,$comment_status,$share_status,$like_status)
	{
		
		// Post table.
		$postdata = array(
				'userid'   		=> $userId,
				'post_title'   	=> $post_title,
				'post_content'  => $post_desc,
				'post_attach' 	=> $post_attach,
				'post_type' 	=> $post_type,
				'post_date' 	=> date('Y-m-d H:i:s'),
				'post_status'	=> $post_status,
				'comment_status'=> $comment_status,
				'share_status'	=> $share_status,
				'like_status' 	=> $like_status
		);
		$this->db->insert('posts', $postdata);
		$insert_id = $this->db->insert_id();

   		return  $insert_id;
	}
	
	public function getpostsbyid($id)
	{
		
		$query = $this->db->select('*')
		->where('id', $id)
		->limit(1)
		->order_by('id', 'desc')
		->get('posts');
		
		return $query->row_array();
	}
	
	public function getposts($userid)
	{
		
		$query = $this->db->select('*')
		->where('userid', $userid)
		->limit(0,3)
		->order_by('id', 'desc')
		->get('posts');
		
		return $query->result_array();
	}
	
	public function getotalpostsbyuser($userid)
	{
		$query = $this->db->select('*')
		->where('userid', $userid)
		->limit(0,3)
		->order_by('id', 'desc')
		->get('posts');
		
		return $query->num_rows();
		
	}
	
	public function hidepost()
	{
		
	}
	public function reportpost()
	{
		
	}
	public function deletepost($id)
	{
		$this->db->where('id', $id);
		$this->db->delete('posts');
		if ( $this->db->affected_rows() == '1' ) {return TRUE;}
		else {return FALSE;}
		
	}
	
	public function getCurrentUserFrist($userid)
	{
		$query = $this->db->select('leader')
		->where('subscriber',$userid)
		->get('relations');
		return $query->result_array();
	}
	
	public function getuserslist($userid)
	{
		$query = $this->db->select('*')
		->where('id !=',$userid)
		->limit(0,10)
		->order_by('id', 'desc')
		->get('users');
		return $query->result_array();
		
	}
}
?>